<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.PoolMapper">
  <resultMap id="BaseResultMap" type="com.woniu.domain.Pool">
    <id column="pool_id" jdbcType="INTEGER" property="poolId" />
    <result column="pool_residue" jdbcType="INTEGER" property="poolResidue" />
    <result column="schedulings_id" jdbcType="INTEGER" property="schedulingsId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pool_id, pool_residue, schedulings_id
  </sql>
  <select id="selectByExample" parameterType="com.woniu.domain.PoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pool
    where pool_id = #{poolId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pool
    where pool_id = #{poolId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.domain.PoolExample">
    delete from pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.Pool">
    insert into pool (pool_id, pool_residue, schedulings_id
      )
    values (#{poolId,jdbcType=INTEGER}, #{poolResidue,jdbcType=INTEGER}, #{schedulingsId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.Pool">
    insert into pool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="poolId != null">
        pool_id,
      </if>
      <if test="poolResidue != null">
        pool_residue,
      </if>
      <if test="schedulingsId != null">
        schedulings_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="poolId != null">
        #{poolId,jdbcType=INTEGER},
      </if>
      <if test="poolResidue != null">
        #{poolResidue,jdbcType=INTEGER},
      </if>
      <if test="schedulingsId != null">
        #{schedulingsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.PoolExample" resultType="java.lang.Long">
    select count(*) from pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pool
    <set>
      <if test="record.poolId != null">
        pool_id = #{record.poolId,jdbcType=INTEGER},
      </if>
      <if test="record.poolResidue != null">
        pool_residue = #{record.poolResidue,jdbcType=INTEGER},
      </if>
      <if test="record.schedulingsId != null">
        schedulings_id = #{record.schedulingsId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pool
    set pool_id = #{record.poolId,jdbcType=INTEGER},
      pool_residue = #{record.poolResidue,jdbcType=INTEGER},
      schedulings_id = #{record.schedulingsId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.domain.Pool">
    update pool
    <set>
      <if test="poolResidue != null">
        pool_residue = #{poolResidue,jdbcType=INTEGER},
      </if>
      <if test="schedulingsId != null">
        schedulings_id = #{schedulingsId,jdbcType=INTEGER},
      </if>
    </set>
    where pool_id = #{poolId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.domain.Pool">
    update pool
    set pool_residue = #{poolResidue,jdbcType=INTEGER},
      schedulings_id = #{schedulingsId,jdbcType=INTEGER}
    where pool_id = #{poolId,jdbcType=INTEGER}
  </update>
  
  <resultMap type="com.woniu.domain.Pool" id="pool">
  	<id column="pool_id" property="poolId"/>
  	<result column="pool_residue" property="poolResidue"/>
    <result column="schedulings_id" property="schedulingsId"/>
    <association property="schedulings" javaType="com.woniu.domain.Schedulings">
    	<id column="schedulings_id" property="schedulingsId"/>
    	<result column="schedulings_date" property="schedulingsDate"/>
    	<result column="schedulings_starttime" property="schedulingsStarttime"/>
    	<result column="schedulings_endtime" property="schedulingsEndtime"/>
    	<result column="doctors_id" property="doctorsId"/>
    	<collection property="doctors" ofType="com.woniu.domain.Doctors">
    		<id column="doctors_id" property="doctorsId"/>
    		<result column="diagnoserooms_id" property="diagnoseroomsId"/>
    		<result column="users_id" property="usersId"/>
    		<result column="doctors_name" property="doctorsName"/>
    		<result column="doctors_photo" property="doctorsPhoto"/>
    		<result column="doctors_phone" property="doctorsPhone"/>
    		<result column="doctors_desc" property="doctorsDesc"/>
    	</collection>
    </association>
  </resultMap>
  
  <select id="selectAll" resultMap="pool" >
  	select * from pool p 
  	right join schedulings s on p.schedulings_id=s.schedulings_id
  	right join doctors d on s.doctors_id=d.doctors_id
  </select>
  
</mapper>