<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.woniu.domain.Users">
    <id column="users_id" jdbcType="INTEGER" property="usersId" />
    <result column="users_number" jdbcType="VARCHAR" property="usersNumber" />
    <result column="users_password" jdbcType="VARCHAR" property="usersPassword" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    users_id, users_number, users_password, salt
  </sql>
  <select id="selectByExample" parameterType="com.woniu.domain.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where users_id = #{usersId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where users_id = #{usersId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.domain.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.Users">
    insert into users (users_id, users_number, users_password, 
      salt)
    values (#{usersId,jdbcType=INTEGER}, #{usersNumber,jdbcType=VARCHAR}, #{usersPassword,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usersId != null">
        users_id,
      </if>
      <if test="usersNumber != null">
        users_number,
      </if>
      <if test="usersPassword != null">
        users_password,
      </if>
      <if test="salt != null">
        salt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usersId != null">
        #{usersId,jdbcType=INTEGER},
      </if>
      <if test="usersNumber != null">
        #{usersNumber,jdbcType=VARCHAR},
      </if>
      <if test="usersPassword != null">
        #{usersPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.usersId != null">
        users_id = #{record.usersId,jdbcType=INTEGER},
      </if>
      <if test="record.usersNumber != null">
        users_number = #{record.usersNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.usersPassword != null">
        users_password = #{record.usersPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set users_id = #{record.usersId,jdbcType=INTEGER},
      users_number = #{record.usersNumber,jdbcType=VARCHAR},
      users_password = #{record.usersPassword,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.domain.Users">
    update users
    <set>
      <if test="usersNumber != null">
        users_number = #{usersNumber,jdbcType=VARCHAR},
      </if>
      <if test="usersPassword != null">
        users_password = #{usersPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
    </set>
    where users_id = #{usersId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.domain.Users">
    update users
    set users_number = #{usersNumber,jdbcType=VARCHAR},
      users_password = #{usersPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR}
    where users_id = #{usersId,jdbcType=INTEGER}
  </update>
  
  
  
  
  
  <select id="seleteRolesByUsersId" parameterType="int" resultMap="rm">
  	SELECT * FROM users_roles ur JOIN roles r
	ON ur.`roles_id` = r.`roles_id`
	WHERE users_id = #{usersId}
  </select>
  <resultMap type="com.woniu.domain.Roles" id="rm">
  	<id property="rolesId" column="roles_id"/>
  	<result property="rolesName" column="roles_name"/>
  </resultMap>
  <insert id="insertrp" parameterType="java.util.Map">
  	insert into users_roles values(#{usersId},#{rolesId})
  </insert>
  <delete id="revokeRolesFromUsersId" parameterType="int">
  	delete from users_roles
  	where users_Id=#{usersId}
  </delete>
</mapper>